# 8.2. JPQL - Query with Params

如果今天想要在 SQL 加入使用者傳進來的參數的話，可以在 SQL 語句傳入動態查詢參數，有以下幾種方法：
1. SQL 查詢語句串接
   `"select * from STUDENT.TB_EMP where EMP_ID = " + empID`
   <br/>
2. 依位置傳入參數 ( Positional Parameters )：類似 PreparedStatement 用法
   `"select * from STUDENT.TB_EMP where EMP_ID = ?1"`
   <br/>

3. 依參數名稱對照 ( Named Parameters )
   `"select * from STUDENT.TB_EMP where EMP_ID = :EMP_ID"`

接下來的練習我們會使用第三種方式，也就是依照參數名稱將對應的參數傳入查詢條件。等一下會修改剛剛新增的 `EmpController.java` 及 `SqlAction.java` 兩個檔案。

```
|--com.example.demospringboot
   |--DemospringbootApplication.java
|--com.example.demospringboot.configuration
   |--SwaggerConfig.java
   |--RestConfiguration.java
|--com.example.demospringboot.controller
   |--TestController.java
   |--ProductController.java
   |--EmpController.java // 修改的檔案
|--com.example.demospringboot.entity
   |--Car.java
   |--CarPK.java
|--com.example.demospringboot.model
   |--Product.java
|--com.example.demospringboot.repository
   |--CarRepository.java
|--com.example.demospringboot.service
   |--CarService.java
   |--ProductService.java
|--com.example.demospringboot.service.impl
   |--CarServiceImpl.java
   |--ProductServiceImpl.java
|--com.example.demospringboot.service.sql
   |--SqlAction.java // 修改的檔案
```

先修改 `SqlAction.java` 的內容，在原本的 `queryIDForList` 方法新增傳入參數 `empID`，然後修改 SQL 語句，把原本設定的查詢條件參數值以**冒號**加**變數名稱**取代，這樣 JPA 才能把參數值替換到 SQL 內。要設定傳入參數的話，可以使用 `Query` 物件的 `setParameter(key, value)` 方法設定，需要注意的是，`key` 值必須跟寫在 SQL 內的冒號後的變數名稱一樣，否則會拋出錯誤。

```java
@Configuration
public class SqlAction {

   @Autowired
   private EntityManager entityManager;

   public <T> List<T> queryIDForList(String empID) {
      Query query = entityManager.createNativeQuery("select * from STUDENT.TB_EMP where EMP_ID = :EMP_ID", EmpEntity.class);
      query.setParameter("EMP_ID", empID);
      return query.getResultList();
   }
}
```

再來修改 Controller 的部分，呼叫 `queryForList()` 方法需要傳入一個型態為 `String` 的參數。

```java
@RestController
public class EmpController {

   @Autowired
   private SqlAction sqlAction;

   @RequestMapping(value = "/empName", method = RequestMethod.GET)
   public <T> List<T> queryEmpName() {
      return sqlAction.queryForList("12345");
   }
}
```

修改完後打 url 測試就可以拿到相對應的資料。
![  ](/images/8.2-1.png)
<br/>

## 參考

https://openhome.cc/Gossip/EJB3Gossip/Query.html 
https://www.baeldung.com/jpa-query-parameters 
